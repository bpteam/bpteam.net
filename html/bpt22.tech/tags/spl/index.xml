<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SPL on Evgen Pyanykh</title><link>//bpt22.tech/tags/spl/</link><description>Recent content in SPL on Evgen Pyanykh</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Mon, 15 Feb 2016 00:00:00 +0000</lastBuildDate><atom:link href="//bpt22.tech/tags/spl/index.xml" rel="self" type="application/rss+xml"/><item><title>SPL VS процедуры и 5.6 VS 7 очередь (queue)</title><link>//bpt22.tech/posts/2016-02-15-spl-vs-%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D0%B4%D1%83%D1%80%D1%8B-%D0%B8-5.6-vs-7-%D0%BE%D1%87%D0%B5%D1%80%D0%B5%D0%B4%D1%8C-queue/</link><pubDate>Mon, 15 Feb 2016 00:00:00 +0000</pubDate><guid>//bpt22.tech/posts/2016-02-15-spl-vs-%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D0%B4%D1%83%D1%80%D1%8B-%D0%B8-5.6-vs-7-%D0%BE%D1%87%D0%B5%D1%80%D0%B5%D0%B4%D1%8C-queue/</guid><description>Рассмотрим структуры данных из стандартной библиотеки php (SPL) и процедурный подход с массивами. И замеряем скорость выполнения на разных версиях PHP, а именно на 5.6 и 7. Сегодняшняя тема: «структура Очередь».
Очередь — абстрактный тип данных с дисциплиной доступа к элементам «первый пришёл — первый вышел» (FIFO, First In — First Out). Добавление элемента (принято обозначать словом enqueue — поставить в очередь) возможно лишь в конец очереди, выборка — только из начала очереди (что принято называть словом dequeue — убрать из очереди), при этом выбранный элемент из очереди удаляется.</description></item><item><title>SPL VS процедуры и 5.6 VS 7 стек (stack)</title><link>//bpt22.tech/posts/2016-02-15-spl-vs-%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D0%B4%D1%83%D1%80%D1%8B-%D0%B8-5.6-vs-7-%D1%81%D1%82%D0%B5%D0%BA-stack/</link><pubDate>Mon, 15 Feb 2016 00:00:00 +0000</pubDate><guid>//bpt22.tech/posts/2016-02-15-spl-vs-%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D0%B4%D1%83%D1%80%D1%8B-%D0%B8-5.6-vs-7-%D1%81%D1%82%D0%B5%D0%BA-stack/</guid><description>Сегодня рассмотрим структуры данных из стандартной библиотеки php (SPL) и процедурный подход с массивами. И замеряем скорость выполнения на разных версиях PHP, а именно на 5.6 и 7. Начнем с простого, структура Стек.
Стек (англ. stack — стопка; читается стэк) — абстрактный тип данных, представляющий собой список элементов, организованных по принципу LIFO (англ. last in — first out, «последним пришёл — первым вышел»).
Чаще всего принцип работы стека сравнивают со стопкой тарелок: чтобы взять вторую сверху, нужно снять верхнюю.</description></item></channel></rss>